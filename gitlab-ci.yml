apiVersion: apps/v1
kind: Deployment
metadata:
  name: meu-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: meu-app
  template:
    metadata:
      labels:
        app: meu-app
    spec:
      containers:
        - name: meu-app
          image: meu-app:latest
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: meu-app-service
spec:
  selector:
    app: meu-app
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: meu-app-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: meu-app.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: meu-app-service
                port:
                  name: http
---
stages:
  - build
  - test
  - deploy
variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  CONTAINER_IMAGE: meu-app
  KUBE_NAMESPACE: default
  KUBE_SERVER: https://kubernetes.example.com
  KUBE_TOKEN: <TOKEN>
  
build:
  stage: build
  image: docker:latest
  script:
    - docker build -t $CONTAINER_IMAGE .
    - docker tag $CONTAINER_IMAGE $CONTAINER_IMAGE:latest
  
test:
  stage: test
  image: $CONTAINER_IMAGE:latest
  script:
    - echo "Running tests"
  
deploy:
  stage: deploy
  image: docker:latest
  script:
    - echo "$KUBE_CA_CERT" | base64 -d > ca.crt
    - echo "$KUBE_CLIENT_CERT" | base64 -d > client.crt
    - echo "$KUBE_CLIENT_KEY" | base64 -d > client.key
    - kubectl config set-cluster default --server=$KUBE_SERVER --certificate-authority=ca.crt
    - kubectl config set-credentials default --token=$KUBE_TOKEN --client-certificate=client.crt --client-key=client.key
    - kubectl config set-context default --cluster=default --user=default --namespace=$KUBE_NAMESPACE
    - kubectl config use-context default
    - kubectl apply -f kubernetes.yaml